@model RegisterUserAssignment.Models.User

@{
    ViewBag.Title = "User Registration";
    Html.EnableClientValidation(true);
}

<style>
    .profile-pic-preview {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background-color: #808080;
        overflow: hidden;
        margin-bottom: 10px;
    }

    .profile-pic-preview img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
</style>

<div class="container-fluid">
    <h2>Register as User</h2>
    <hr />

    @using (Html.BeginForm("Register", "Registration", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.ValidationSummary(false, "", new { @class = "text-danger" })
        <div class="row form-group mb-2">
            <div class="col-sm-4"></div>
            <div class="col-sm-8">
                <p class="fw-bold">Image Preview</p>
                <div class="profile-pic-preview" id="imagePreview">
                    <img src="#" alt="Profile Picture Preview" style="display:none;" id="previewImg" />
                </div>
                <label for="ProfilePicture" class="control-label fw-bold">Your Profile Picture</label> <br />
                @Html.TextBoxFor(m => m.ProfilePicture, new { type = "file", accept = "image/*", onchange = "previewImage();", id = "profilePicture" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Username, "UserName:", new { @class = "control-label col-sm-4 fw-bold" })
            <div class="col-sm-8">
                @Html.TextBoxFor(m => m.Username, new { @class = "form-control", placeholder = "User Name" })
                @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Email, "Email Address:", new { @class = "control-label col-sm-4 fw-bold" })
            <div class="col-sm-8">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "Email Id" })
                @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.Password, "Password:", new { @class = "control-label col-sm-4 fw-bold" })
            <div class="col-sm-8">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            @Html.LabelFor(m => m.ConfirmPassword, "Confirm Password:", new { @class = "control-label col-sm-4 fw-bold" })
            <div class="col-sm-8">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        <hr />
        <div class="d-flex justify-content-end">
            <button type="submit" class="btn btn-primary">Sign Up</button>
        </div>
    }
</div>

<script>
    function previewImage() {
        var preview = document.getElementById('previewImg');
        var file = document.getElementById('profilePicture').files[0];
        var reader  = new FileReader();

        reader.onloadend = function () {
            preview.src = reader.result;
            preview.style.display = "block";
        }

        if (file) {
            reader.readAsDataURL(file);
        } else {
            preview.src = "";
            preview.style.display = "none";
        }
    }
</script>


